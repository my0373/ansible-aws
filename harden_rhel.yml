---
- name: Setup an EC2 instance
  hosts: all
  vars:
    ssh_public_key: "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCytCeOZtwKbmsz+VU1yTlUPPwunVpXPE/9CKpiUVB7aPnurh8AtZoY7DCAuTMI2MhFbqlFgAHB00jhJ///uZW7D4S/7KBmLJBltr61jrVkcakZti3nz+g3R2F4ux6DeNMiTAInpLp5YwXEeBhArkULvZLPcmakOS3LQpL47xsAoiwkXRjr+19enck+ooniLPtJLC4u7bjqZQ47j7+6P6dEIJRg3yZ4RcNVjrEMm7qNTsDqNbk7d6qsA1stHl+5v+B+mCz3hY6HVlALUuhPzKTahXdlUhmo40B0H5PkU0fnbvQjdTiQt7+VogLHinXIFau4tMjx/n3AS29LKtie5XSP"

  tasks:
    - name: Create the Ansible group
      group:
        name: ansible
        state: present
        gid: 1337
      remote_user: ec2-user

    - name: Create the Ansible user and generate it's SSH key.
      user:
        name: ansible
        comment: "Ansible service account"
        uid: 1337
        group: ansible
        generate_ssh_key: yes
        state: present
      remote_user: ec2-user

    - name: Add sudoers users to wheel group
      user:
        name: "ansible"
        groups: wheel
        append: yes
      remote_user: ec2-user

    - name: Allow 'wheel' group to have passwordless sudo
      lineinfile:
        dest: /etc/sudoers
        state: present
        regexp: '^%wheel'
        line: '%wheel ALL=(ALL) NOPASSWD: ALL'
        validate: visudo -cf %s
      remote_user: ec2-user

    - name: Set authorized key took from file
      authorized_key:
        user: ansible
        state: present
        ## Yes, it's an embedded key. It's not in use in any real systems anywhere.
        key: "{{ ssh_public_key }}"
      remote_user: ec2-user

    - name: Test the server is accessible via the ansible user.
      ping:
      remote_user: ansible

    - name: remove the default ec2-user
      user:
        name: ec2-user
        state: absent
        remove: yes
      remote_user: ansible
